<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_car</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_car_parents</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 특수한 변수
step_one = 0; // 최초 1회 실행. (event_user_0 참고)

/*
    할당받는 변수
    state_where: 어디서 시작했는지(누적) ( 0:왼쪽  1:아래  2:오른쪽  3:위쪽 )
    state_will: 어디로 갈 것인지 
*/

// 일반 변수
want_spd = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 최초 1회
if step_one == 0 {
    step_one = 1;
    event_user(0);
}

// 방향
image_angle = direction;

// 가속
if (path_speed &lt; want_spd) {
    path_speed += 0.05;
}
else {
    path_speed = want_spd;
}

// 방향 최적화
while (direction &gt;= 360) {
    direction -= 360;
}

// 충돌방지 - 각도로 한 번 방지
other_id = instance_place(x+lengthdir_x(4,direction),y+lengthdir_y(4,direction),o_car_parents);
if (other_id != -4) {
    delta = abs(other_id.direction - direction);
    if (delta &lt;= 95)
        path_speed = 0;
}

// 신호탐지
other_id = instance_position(x,y,o_road_parent);
if (other_id != -4) {
    // 우회전은 신호무시
    if (state_will == 0) { // 좌회전
        if (other_id.light_mode[state_where] != 2)
            if (path_position &gt;= 0.22 &amp;&amp; path_position &lt;= 0.23) // 진행 중에 멈추지 않음
                path_speed = 0;
    }
    if (state_will == 1) { // 직진
        if (other_id.light_mode[state_where] &lt;= 1)
            if (path_position &gt;= 0.22 &amp;&amp; path_position &lt;= 0.23) // 진행 중에 멈추지 않음
                path_speed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message(direction);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
state_where: 초기 상태 및 앞으로 누적될 상태 (처음엔 with로 받음)
    

state_will: 좌회전, 직진, 우회전 예정 등에 대한 정보
    0(좌회전)  1(직진)  2(우회전)
    
state_path: 예정 path (아래 switch문에서 결정됨)
*/

switch (state_where) {
case 0:
    angle_plus = 0;
    if (state_will == 0)
        state_path = p_left_left;
    else if (state_will == 2)
        state_path = p_right_left;
    break;
case 1:
    angle_plus = 90;
    if (state_will == 0)
        state_path = p_left_down;
    else if (state_will == 2)
        state_path = p_right_down;
    break;
case 2:
    angle_plus = 180;
    if (state_will == 0)
        state_path = p_left_right;
    else if (state_will == 2)
        state_path = p_right_right;
    break;
case 3:
    angle_plus = 270;
    if (state_will == 0)
        state_path = p_left_up;
    else if (state_will == 2)
        state_path = p_right_up;
    break;
default: //assert
    show_message("ERR: o_car_universial: create: 1");
}

if (state_will == 0 || state_will == 2) {
    path_start(state_path, 0, 0, 0);
    //path_speed = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = want_spd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
